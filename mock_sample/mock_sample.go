// Code generated by MockGen. DO NOT EDIT.
// Source: sample/sample.go

package mock_sample

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSample is a mock of Sample interface
type MockSample struct {
	ctrl     *gomock.Controller
	recorder *MockSampleMockRecorder
}

// MockSampleMockRecorder is the mock recorder for MockSample
type MockSampleMockRecorder struct {
	mock *MockSample
}

// NewMockSample creates a new mock instance
func NewMockSample(ctrl *gomock.Controller) *MockSample {
	mock := &MockSample{ctrl: ctrl}
	mock.recorder = &MockSampleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockSample) EXPECT() *MockSampleMockRecorder {
	return _m.recorder
}

// Method mocks base method
func (_m *MockSample) Method(s string) int {
	ret := _m.ctrl.Call(_m, "Method", s)
	ret0, _ := ret[0].(int)
	return ret0
}

// Method indicates an expected call of Method
func (_mr *MockSampleMockRecorder) Method(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "Method", reflect.TypeOf((*MockSample)(nil).Method), arg0)
}
